


This is TiOS, uCore with SMP support
Shichao Yue


memory management: default_pmm_manager
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
use SLOB allocator
kmalloc_init() succeeded!
============================
There are 1 cpu
============================
============================
SMP Coming Soon
============================
check_vma_struct() succeeded!
page fault
page fault at 0x00000100: K/W [no page found].
check_pgfault() succeeded!
check_vmm() succeeded.
sched class: stride_scheduler
ide 0:      10000(sectors), 'QEMU HARDDISK'.
ide 1:     262144(sectors), 'QEMU HARDDISK'.
ide 2:     262144(sectors), 'QEMU HARDDISK'.
SWAP: manager = fifo swap manager
sfs: mount: 'simple file system' (262/32506/32768)
vfs: mount disk0.
startothers
============================
SMP Coming!!!!!!, 0xc0346008
============================
init proc: 2
================cpu0: starting=================
I am No.4 philosopher_condvar
Iter 1, No.4 philosopher_condvar is thinking
I am No.3 philosopher_condvar
Iter 1, No.3 philosopher_condvar is thinking
I am No.2 philosopher_condvar
Iter 1, No.2 philosopher_condvar is thinking
I am No.1 philosopher_condvar
Iter 1, No.1 philosopher_condvar is thinking
I am No.0 philosopher_condvar
Iter 1, No.0 philosopher_condvar is thinking
I am No.4 philosopher_sema
Iter 1, No.4 philosopher_sema is thinking
I am No.3 philosopher_sema
Iter 1, No.3 philosopher_sema is thinking
I am No.2 philosopher_sema
Iter 1, No.2 philosopher_sema is thinking
I am No.1 philosopher_sema
Iter 1, No.1 philosopher_sema is thinking
I am No.0 philosopher_sema
Iter 1, No.0 philosopher_sema is thinking
kernel_execve: pid = 3, name = "forktree".

This is run on CPU: #0
forktree process will sleep 400 ticks
Iter 1, No.0 philosopher_sema is eating
Iter 1, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.0 philosopher_condvar is eating
Iter 1, No.1 philosopher_condvar is eating
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.2 philosopher_condvar is eating
Iter 1, No.3 philosopher_condvar is eating
Iter 1, No.4 philosopher_condvar is eating
Iter 2, No.3 philosopher_condvar is thinking
Iter 2, No.2 philosopher_condvar is thinking
Iter 2, No.1 philosopher_condvar is thinking
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c0346c40, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346c40, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is thinking
Iter 2, No.2 philosopher_sema is thinking
Iter 1, No.3 philosopher_sema is eating
Iter 2, No.0 philosopher_sema is thinking
Iter 1, No.1 philosopher_sema is eating
Iter 2, No.4 philosopher_condvar is thinking
Iter 2, No.1 philosopher_sema is thinking
Iter 2, No.0 philosopher_sema is eating
Iter 2, No.3 philosopher_sema is thinking
Iter 2, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is eating
Iter 2, No.4 philosopher_condvar is eating
Iter 2, No.1 philosopher_condvar is eating
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is eating
Iter 2, No.3 philosopher_condvar is eating
Iter 3, No.2 philosopher_sema is thinking
Iter 2, No.3 philosopher_sema is eating
Iter 3, No.0 philosopher_sema is thinking
Iter 2, No.1 philosopher_sema is eating
Iter 3, No.3 philosopher_condvar is thinking
Iter 3, No.2 philosopher_condvar is thinking
Iter 3, No.1 philosopher_condvar is thinking
Iter 3, No.4 philosopher_condvar is thinking
Iter 3, No.0 philosopher_condvar is thinking
Iter 3, No.1 philosopher_sema is thinking
Iter 3, No.0 philosopher_sema is eating
Iter 3, No.3 philosopher_sema is thinking
Iter 3, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.0 philosopher_condvar is eating
Iter 3, No.4 philosopher_condvar is eating
Iter 3, No.1 philosopher_condvar is eating
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.2 philosopher_condvar is eating
Iter 3, No.3 philosopher_condvar is eating
Iter 4, No.2 philosopher_sema is thinking
Iter 3, No.3 philosopher_sema is eating
Iter 4, No.0 philosopher_sema is thinking
Iter 3, No.1 philosopher_sema is eating
Iter 4, No.1 philosopher_condvar is thinking
Iter 4, No.4 philosopher_condvar is thinking
Iter 4, No.0 philosopher_condvar is thinking
Iter 4, No.3 philosopher_condvar is thinking
Iter 4, No.2 philosopher_condvar is thinking
Iter 4, No.1 philosopher_sema is thinking
Iter 4, No.0 philosopher_sema is eating
Iter 4, No.3 philosopher_sema is thinking
Iter 4, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346b30, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.0 philosopher_condvar is eating
Iter 4, No.4 philosopher_condvar is eating
Iter 4, No.1 philosopher_condvar is eating
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c0346bb8, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.2 philosopher_condvar is eating
Iter 4, No.3 philosopher_condvar is eating
No.2 philosopher_sema quit
Iter 4, No.3 philosopher_sema is eating
No.0 philosopher_sema quit
Iter 4, No.1 philosopher_sema is eating
No.1 philosopher_condvar quit
No.4 philosopher_condvar quit
No.0 philosopher_condvar quit
No.3 philosopher_condvar quit
No.2 philosopher_condvar quit
No.1 philosopher_sema quit
No.3 philosopher_sema quit
Iter 1, No.4 philosopher_sema is eating
Iter 2, No.4 philosopher_sema is thinking
Iter 2, No.4 philosopher_sema is eating
Iter 3, No.4 philosopher_sema is thinking
Iter 3, No.4 philosopher_sema is eating
Iter 4, No.4 philosopher_sema is thinking
Iter 4, No.4 philosopher_sema is eating
No.4 philosopher_sema quit
0003: I am ''
000f: I am '1'
0011: I am '11'
0013: I am '111'
0015: I am '1111'
0014: I am '1110'
0012: I am '110'
0017: I am '1101'
0016: I am '1100'
0010: I am '10'
0019: I am '101'
001b: I am '1011'
001a: I am '1010'
0018: I am '100'
001d: I am '1001'
001c: I am '1000'
000e: I am '0'
001f: I am '01'
0021: I am '011'
0023: I am '0111'
0022: I am '0110'
0020: I am '010'
0025: I am '0101'
0024: I am '0100'
001e: I am '00'
0027: I am '001'
0029: I am '0011'
0028: I am '0010'
0026: I am '000'
002b: I am '0001'
002a: I am '0000'
sfs: cleanup: 'simple file system' (262/32506/32768)
all user-mode processes have quit.
init check memory pass.
kernel panic at kern/process/proc.c:468:
    initproc exit.

Welcome to the kernel debug monitor!!
Type 'help' for a list of commands.
K> 